# Generated by Django 3.2 on 2022-07-01 06:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerHotelRegister',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=50)),
                ('visit', models.IntegerField(blank=True, null=True)),
                ('purchase', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MainUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('org_name', models.CharField(max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Privilage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit', models.BooleanField(default=False)),
                ('purchase', models.BooleanField(default=False)),
                ('silver_target_visit', models.IntegerField(blank=True, null=True)),
                ('silver_target_purchase', models.IntegerField(blank=True, null=True)),
                ('silver_offer', models.CharField(blank=True, max_length=50, null=True)),
                ('gold_target_visit', models.IntegerField(blank=True, null=True)),
                ('gold_target_purchase', models.IntegerField(blank=True, null=True)),
                ('gold_offer', models.CharField(blank=True, max_length=50, null=True)),
                ('diamond_target_visit', models.IntegerField(blank=True, null=True)),
                ('diamond_target_purchase', models.IntegerField(blank=True, null=True)),
                ('diamond_offer', models.CharField(blank=True, max_length=50, null=True)),
                ('saved', models.BooleanField(default=False)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.mainuser')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('phone_number', models.IntegerField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.mainuser')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.customerhotelregister')),
            ],
        ),
        migrations.AddField(
            model_name='customerhotelregister',
            name='hotel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.mainuser'),
        ),
        migrations.AddField(
            model_name='customerhotelregister',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.customeruser'),
        ),
    ]
